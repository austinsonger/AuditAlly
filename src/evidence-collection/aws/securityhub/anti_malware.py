import os
import subprocess
import datetime
import json

current_year = datetime.datetime.now().year

environments = {
    'commercial': {
        'access_key': os.getenv('DEVOPS_CORP_AUTOMATION_AWS_ACCESS_KEY_ID'),
        'secret_key': os.getenv('DEVOPS_CORP_AUTOMATION_AWS_SECRET_ACCESS_KEY'),
        'region': 'us-east-1',
        'commercial_output_file': f"/evidence-artifacts/{current_year}/commercial/anti_malware_evidence.json"
    },
    'federal': {
        'access_key': os.getenv('DEVOPS_DOOP_AUTOMATION_AWS_ACCESS_KEY_ID'),
        'secret_key': os.getenv('DEVOPS_DOOP_AUTOMATION_AWS_SECRET_ACCESS_KEY'),
        'region': 'us-east-1',
        'federal_output_file': f"/evidence-artifacts/{current_year}/federal/anti_malware_evidence.json"
    }
}

def run_command(command):
    result = subprocess.run(command, text=True, capture_output=True, shell=True)
    return result.stdout.splitlines()

def gather_evidence():
    for env_name, config in environments.items():
        os.environ['AWS_ACCESS_KEY_ID'] = config['access_key']
        os.environ['AWS_SECRET_ACCESS_KEY'] = config['secret_key']
        os.environ['AWS_DEFAULT_REGION'] = config['region']

        output = []
        aws_command = [
            'aws', 'securityhub', 'get-findings',
            '--region', config['region'],
            '--output', 'json'
        ]

        # Run AWS CLI command and capture the output
        findings_output = run_command(' '.join(aws_command))
        output.extend(findings_output)

        # Determine the output file based on environment
        output_file = config[env_name + '_output_file']

        # Ensure the directory exists
        os.makedirs(os.path.dirname(output_file), exist_ok=True)

        # Write the JSON output to the specified file path
        with open(output_file, 'w') as file:
            json.dump(output, file)

if __name__ == "__main__":
    gather_evidence()
