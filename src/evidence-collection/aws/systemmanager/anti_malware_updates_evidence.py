import os
import subprocess
import datetime
import json

# Current year for file naming
current_year = datetime.datetime.now().year

# Setup the environments dictionary with AWS credentials and output paths
environments = {
    'commercial': {
        'access_key': os.getenv('DEVOPS_CORP_AUTOMATION_AWS_ACCESS_KEY_ID'),
        'secret_key': os.getenv('DEVOPS_CORP_AUTOMATION_AWS_SECRET_ACCESS_KEY'),
        'region': 'us-east-1',
        'commercial_output_file': f"/evidence-artifacts/{current_year}/commercial/anti_malware_updates.json"
    },
    'federal': {
        'access_key': os.getenv('DEVOPS_DOOP_AUTOMATION_AWS_ACCESS_KEY_ID'),
        'secret_key': os.getenv('DEVOPS_DOOP_AUTOMATION_AWS_SECRET_ACCESS_KEY'),
        'region': 'us-east-1',
        'federal_output_file': f"/evidence-artifacts/{current_year}/federal/anti_malware_updates.json"
    }
}

def run_command(command):
    """Function to run a given shell command and return the output as a list of strings."""
    result = subprocess.run(command, capture_output=True, text=True, shell=True)
    return result.stdout.strip().split('\n')

# Iterate over each environment in the dictionary
for env_name, config in environments.items():
    # Set the AWS credentials for the current environment
    os.environ['AWS_ACCESS_KEY_ID'] = config['access_key']
    os.environ['AWS_SECRET_ACCESS_KEY'] = config['secret_key']
    os.environ['AWS_DEFAULT_REGION'] = config['region']

    # Prepare the AWS CLI command to get documents related to anti-malware
    aws_command = [
        'aws', 'ssm', 'list-documents',
        '--document-filter-list', 'key=Owner,Values=Self;key=DocumentType,Values=Automation',
        '--output', 'json'
    ]

    # Run the AWS CLI command
    output = run_command(' '.join(aws_command))

    # Determine the output file based on environment
    output_file = config['commercial_output_file'] if env_name == 'commercial' else config['federal_output_file']

    # Ensure the output directory exists
    os.makedirs(os.path.dirname(output_file), exist_ok=True)

    # Write the JSON output to the specified file path
    with open(output_file, 'w') as file:
        json.dump(output, file)

print("Evidence files have been successfully created for all environments.")
